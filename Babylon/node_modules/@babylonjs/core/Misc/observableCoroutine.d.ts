import { Nullable } from "../types";
declare module "./observable" {
    interface Observable<T> {
        /**
         * Internal list of iterators and promise resolvers associated with coroutines.
         */
        coroutineIterators: Nullable<Array<{
            iterator: Iterator<void | Promise<void>, void, void>;
            resolver: () => void;
            rejecter: () => void;
            paused: boolean;
        }>>;
        /**
         * Runs a coroutine asynchronously on this observable
         * @param coroutineIterator the iterator resulting from having started the coroutine
         * @returns a promise which will be resolved when the coroutine finishes or rejected if the coroutine is cancelled
         */
        runCoroutineAsync(coroutineIterator: Iterator<void | Promise<void>, void, void>): Promise<void>;
        /**
         * Cancels all coroutines currently running on this observable
         */
        cancelAllCoroutines(): void;
    }
}
