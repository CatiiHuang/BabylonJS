import { Scene } from "../../scene";
import { Mesh } from "../../Meshes/mesh";
import { Nullable } from '../../types';
/**
 * Class containing static functions to help procedurally build a Goldberg mesh
 */
export declare class GoldbergBuilder {
    /**
     * Creates the Mesh for a Goldberg Polyhedron which is made from 12 pentagonal and the rest hexagonal faces
     * @see https://en.wikipedia.org/wiki/Goldberg_polyhedron
     * @param name defines the name of the mesh
     * @param options an object used to set the following optional parameters for the polyhedron, required but can be empty
     * * m number of horizontal steps along an isogrid
     * * n number of angled steps along an isogrid
     * * size the size of the Goldberg, optional default 1
     * * sizeX allows stretching in the x direction, optional, default size
     * * sizeY allows stretching in the y direction, optional, default size
     * * sizeZ allows stretching in the z direction, optional, default size
     * * updatable defines if the mesh must be flagged as updatable
     * * sideOrientation optional and takes the values : Mesh.FRONTSIDE (default), Mesh.BACKSIDE or Mesh.DOUBLESIDE
     * @param scene defines the hosting scene
     * @returns Goldberg mesh
     */
    static CreateGoldberg(name: string, options: {
        m?: number;
        n?: number;
        size?: number;
        sizeX?: number;
        sizeY?: number;
        sizeZ?: number;
        updatable?: boolean;
        sideOrientation?: number;
    }, scene?: Nullable<Scene>): Mesh;
}
